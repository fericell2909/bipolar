# This file was generated based on ".graphqlconfig". Do not edit manually.

schema {
    query: Query
}

"A type"
type Category {
    "Hashed ID"
    hash_id: String!
    "Name of the state"
    name: String!
}

"Colors of a product"
type Color {
    "Hashed ID"
    hash_id: String!
    "Name of the color"
    name: String!
}

"Label to indicate status of a product"
type Label {
    "Color"
    color: String!
    "Slug"
    hash_id: String!
    "Name in english"
    name_en: String!
    "Name in spanish"
    name_es: String!
    "Slug"
    slug: String!
}

"A type"
type Page {
    "Body in english"
    body_en: String!
    "Body in spanish"
    body_es: String!
    "Image of the page"
    main_image: String
    "Page slug"
    slug: String!
    "Title in english"
    title_en: String!
    "Title in spanish"
    title_es: String!
}

"A type"
type Photo {
    "Hashed ID"
    hash_id: String!
    "Appareance order"
    order: Int!
    "Photo url"
    url: String!
}

"A product"
type Product {
    begin_discount: String
    colors: [Color]
    created_at_month_year: String
    description_en: String
    description_es: String
    discount_pen: Int
    discount_usd: Int
    end_discount: String
    "First photo url"
    first_photo_url: String
    free_shipping: Boolean!
    "[Requires colors] Get product fullname"
    fullname: String
    "Hashed id"
    hash_id: String!
    is_salient: Boolean!
    is_showroom_sale: Boolean!
    label: Label
    name_en: String!
    name_es: String!
    photos: [Photo]
    price_pen: Float!
    price_pen_discount: Float
    price_usd: Float!
    price_usd_discount: Float
    publish_date: String
    route_edit: String
    route_preview: String
    route_shop: String
    slug: String!
    state: State
    subtypes: [Subtype]
    weight: Float
}

type ProductsPagination {
    "Current page of the cursor"
    current_page: Int!
    "List of items on the current page"
    data: [Product]
    "Number of the first item returned"
    from: Int
    "Determines if cursor has more pages after the current page"
    has_more_pages: Boolean!
    "The last page (number of pages)"
    last_page: Int!
    "Number of items returned per page"
    per_page: Int!
    "Number of the last item returned"
    to: Int
    "Number of total items selected by the query"
    total: Int!
}

type Query {
    "Get all categories"
    categories: [Category]
    "Get all colors"
    colors: [Color]
    "Get all labels"
    labels: [Label]
    "Pages from Bipolar"
    pages: [Page]
    "Get all photos"
    photos: [Photo]
    "Get all products"
    products: [Product]
    "Get products paginated"
    products_pagination(limit: Int, page: Int): ProductsPagination
    "Get all sizes"
    sizes: [Size]
    "Get states"
    states: [State]
}

"Sizes from a product"
type Size {
    "Hashed ID"
    hash_id: String!
    "Name of the size"
    name: String!
}

"State of the products"
type State {
    "Color of the state"
    color: String!
    "Hashed ID"
    hash_id: String!
    "Label build from the admin"
    html: String
    "Name of the state"
    name: String!
}

"A subtype"
type Subtype {
    "Hashed id"
    hash_id: String!
    name_en: String!
    name_es: String!
    order: Int
    slug: String!
}
